{
  "swagger": "2.0",
  "info": {
    "description": "Generated by artisan-swagger. GitHub Repo: https://github.com/Myriad-Dreamin/boj-v6",
    "title": "BOJ-v6 Backend",
    "version": "v0.5.0"
  },
  "basePath": "/v1",
  "paths": {
    "/announcement": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AnnouncementController"
        ],
        "operationId": "PostAnnouncement",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostAnnouncementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostAnnouncementReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/announcement-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "AnnouncementController"
        ],
        "operationId": "CountAnnouncement",
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountAnnouncementReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/announcement-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "AnnouncementController"
        ],
        "operationId": "ListAnnouncement",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListAnnouncementReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/announcement/{aid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "AnnouncementController"
        ],
        "operationId": "GetAnnouncement",
        "parameters": [
          {
            "name": "aid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetAnnouncementReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AnnouncementController"
        ],
        "operationId": "PutAnnouncement",
        "parameters": [
          {
            "name": "aid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutAnnouncementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutAnnouncementReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AnnouncementController"
        ],
        "operationId": "DeleteAnnouncement",
        "parameters": [
          {
            "name": "aid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteAnnouncementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteAnnouncementReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/comment": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CommentController"
        ],
        "operationId": "PostComment",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostCommentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/comment-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CommentController"
        ],
        "operationId": "CountComment",
        "parameters": [
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountCommentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/comment-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CommentController"
        ],
        "operationId": "ListComment",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "$ref": "#/definitions/comment.Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListCommentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/comment/{cmid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "CommentController"
        ],
        "operationId": "GetComment",
        "parameters": [
          {
            "name": "cmid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetCommentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CommentController"
        ],
        "operationId": "PutComment",
        "parameters": [
          {
            "name": "cmid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutCommentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CommentController"
        ],
        "operationId": "DeleteComment",
        "parameters": [
          {
            "name": "cmid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteCommentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "PostContest",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostContestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostContestReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "CountContest",
        "parameters": [
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountContestReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "ListContest",
        "parameters": [
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListContestReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "GetContest",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetContestReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "PutContest",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutContestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutContestReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "DeleteContest",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteContestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteContestReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "PostContestProblem",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostContestProblemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostContestProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "CountContestProblem",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountContestProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "ListContestProblem",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListContestProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem/{pid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "GetContestProblem",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetContestProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "PutContestProblem",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutContestProblemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutContestProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "DeleteContestProblem",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteContestProblemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteContestProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem/{pid}/desc": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "GetContestProblemDesc",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetContestProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "PutContestProblemDesc",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutContestProblemDescRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutContestProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "PostContestProblemDesc",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostContestProblemDescRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostContestProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "DeleteContestProblemDesc",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteContestProblemDescRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteContestProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem/{pid}/desc-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "CountContestProblemDesc",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountContestProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem/{pid}/desc-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "ListContestProblemDesc",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListContestProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/problem/{pid}/desc/ref": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "ChangeContestProblemDescriptionRef",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          },
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeContestProblemDescriptionRefRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ChangeContestProblemDescriptionRefReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/contest/{cid}/user-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ContestController"
        ],
        "operationId": "ListContestUsers",
        "parameters": [
          {
            "name": "cid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListContestUsersReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "PostGroup",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostGroupReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "CountGroup",
        "parameters": [
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountGroupReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "ListGroup",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "$ref": "#/definitions/gorm_crud_dao.Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListGroupReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group/{gid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "GetGroup",
        "parameters": [
          {
            "name": "gid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetGroupReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "PutGroup",
        "parameters": [
          {
            "name": "gid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutGroupReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "DeleteGroup",
        "parameters": [
          {
            "name": "gid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteGroupReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group/{gid}/owner": {
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "PutGroupOwner",
        "parameters": [
          {
            "name": "gid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutGroupOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutGroupOwnerReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group/{gid}/user-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "GetGroupMembers",
        "parameters": [
          {
            "name": "gid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetGroupMembersReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/group/{gid}/user/{id}": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "GroupController"
        ],
        "operationId": "PostGroupMember",
        "parameters": [
          {
            "name": "gid",
            "in": "path"
          },
          {
            "name": "id",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostGroupMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostGroupMemberReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/policy": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "AuthController"
        ],
        "operationId": "HasPolicy",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/HasPolicyReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AuthController"
        ],
        "operationId": "AddPolicy",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/AddPolicyReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AuthController"
        ],
        "operationId": "RemovePolicy",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RemovePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/RemovePolicyReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/policy/group": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "AuthController"
        ],
        "operationId": "HasGroupingPolicy",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/HasGroupingPolicyReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AuthController"
        ],
        "operationId": "AddGroupingPolicy",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddGroupingPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/AddGroupingPolicyReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "AuthController"
        ],
        "operationId": "RemoveGroupingPolicy",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RemoveGroupingPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/RemoveGroupingPolicyReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "PostProblem",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostProblemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "CountProblem",
        "parameters": [
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ListProblem",
        "parameters": [
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "GetProblem",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "PutProblem",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutProblemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "DeleteProblem",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteProblemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteProblemReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/desc": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "GetProblemDesc",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "PutProblemDesc",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutProblemDescRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "PostProblemDesc",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostProblemDescRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "DeleteProblemDesc",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteProblemDescRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/desc-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "CountProblemDesc",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/desc-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ListProblemDesc",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListProblemDescReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/desc/ref": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ChangeProblemDescriptionRef",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeProblemDescriptionRefRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ChangeProblemDescriptionRefReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/fs": {},
    "/problem/{pid}/fs/config": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSReadConfig",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSReadConfigReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSPutConfig",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSPutConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSPutConfigReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSWriteConfig",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSWriteConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSWriteConfigReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/fs/directory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSLS",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSLSReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSMkdir",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSMkdirRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSMkdirReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSWrites",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSWritesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSWritesReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSRemoveAll",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSRemoveAllRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSRemoveAllReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/fs/directory/zip": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSZipRead",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSZipReadReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSZipWrite",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSZipWriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSZipWriteReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/fs/file": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSStat",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSStatReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSWrite",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSWriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSWriteReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSRemove",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProblemFSRemoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSRemoveReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/fs/file/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ProblemController"
        ],
        "operationId": "ProblemFSRead",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ProblemFSReadReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/problem/{pid}/submission": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "SubmissionController"
        ],
        "operationId": "PostSubmission",
        "parameters": [
          {
            "name": "pid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostSubmissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PostSubmissionReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/submission-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "SubmissionController"
        ],
        "operationId": "CountSubmission",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "mem_order",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "time_order",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id_order",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "by_user",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "uint"
            }
          },
          {
            "name": "on_problem",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "uint"
            }
          },
          {
            "name": "with_language",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "uint8"
            }
          },
          {
            "name": "has_status",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountSubmissionReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/submission-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "SubmissionController"
        ],
        "operationId": "ListSubmission",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "mem_order",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "time_order",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id_order",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "by_user",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "uint"
            }
          },
          {
            "name": "on_problem",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "uint"
            }
          },
          {
            "name": "with_language",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "uint8"
            }
          },
          {
            "name": "has_status",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListSubmissionReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/submission/{sid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "SubmissionController"
        ],
        "operationId": "GetSubmission",
        "parameters": [
          {
            "name": "sid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetSubmissionReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "SubmissionController"
        ],
        "operationId": "DeleteSubmission",
        "parameters": [
          {
            "name": "sid",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteSubmissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteSubmissionReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/submission/{sid}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "SubmissionController"
        ],
        "operationId": "GetSubmissionContent",
        "parameters": [
          {
            "name": "sid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetSubmissionContentReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user-count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "CountUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/CountUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "ListUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ListUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user-token": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "RefreshToken",
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/RefreshTokenReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "LoginUser",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/LoginUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "Register",
        "parameters": [
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/RegisterReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/GetUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "PutUser",
        "parameters": [
          {
            "name": "id",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PutUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/PutUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/DeleteUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user/{id}/email": {
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "BindEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BindEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/BindEmailReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user/{id}/inspect": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "InspectUser",
        "parameters": [
          {
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/InspectUserReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    },
    "/user/{id}/password": {
      "put": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserController"
        ],
        "operationId": "ChangePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path"
          },
          {
            "name": "request.option0",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the request is served and a response is returned.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericResponse"
                },
                {
                  "$ref": "#/definitions/ChangePasswordReply"
                }
              ]
            }
          },
          "500": {
            "description": "the request is serving. however, the backend crashed and no response is returned."
          }
        }
      }
    }
  },
  "definitions": {
    "AddGroupingPolicyReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "boolean"
        }
      }
    },
    "AddGroupingPolicyRequest": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "AddPolicyReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "boolean"
        }
      }
    },
    "AddPolicyRequest": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "BindEmailReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "BindEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ChangeContestProblemDescriptionRefReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ChangeContestProblemDescriptionRefRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "new_name": {
          "type": "string"
        }
      }
    },
    "ChangePasswordReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "new_password": {
          "type": "string"
        },
        "old_password": {
          "type": "string"
        }
      }
    },
    "ChangeProblemDescriptionRefReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ChangeProblemDescriptionRefRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "new_name": {
          "type": "string"
        }
      }
    },
    "ContestProblemDescData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CountAnnouncementReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountCommentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountContestProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountContestProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int"
          }
        }
      }
    },
    "CountContestReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int"
          }
        }
      }
    },
    "CountGroupReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int"
          }
        }
      }
    },
    "CountSubmissionReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DeleteAnnouncementReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteAnnouncementRequest": {
      "type": "object"
    },
    "DeleteCommentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteCommentRequest": {
      "type": "object"
    },
    "DeleteContestProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteContestProblemDescRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "DeleteContestProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteContestProblemRequest": {
      "type": "object"
    },
    "DeleteContestReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteContestRequest": {
      "type": "object"
    },
    "DeleteGroupReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteGroupRequest": {
      "type": "object"
    },
    "DeleteProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteProblemDescRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "DeleteProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteProblemRequest": {
      "type": "object"
    },
    "DeleteSubmissionReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteSubmissionRequest": {
      "type": "object"
    },
    "DeleteUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "DeleteUserRequest": {
      "type": "object"
    },
    "GetAnnouncementReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "GetCommentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "GetContestInnerReply": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "uint"
        },
        "board_frozen_duration": {
          "type": "integer",
          "format": "int64"
        },
        "contest_type": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "end_duration": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GetContestProblemAuthorData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "nick_name": {
          "type": "string"
        }
      }
    },
    "GetContestProblemData": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/GetContestProblemAuthorData"
        },
        "code_length_limit": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "description_ref": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "is_spj": {
          "type": "boolean"
        },
        "memory_limit": {
          "type": "integer",
          "format": "int64"
        },
        "time_limit": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetContestProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "GetContestProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/GetContestProblemData"
        }
      }
    },
    "GetContestReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/GetContestInnerReply"
        }
      }
    },
    "GetGroupMembersInnerReply": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        },
        "motto": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "solved_problems_count": {
          "type": "integer",
          "format": "int64"
        },
        "tried_problems_count": {
          "type": "integer",
          "format": "int64"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "GetGroupMembersReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetGroupMembersInnerReply"
          }
        }
      }
    },
    "GetGroupReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "GetProblemAuthorData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "nick_name": {
          "type": "string"
        }
      }
    },
    "GetProblemData": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/GetProblemAuthorData"
        },
        "code_length_limit": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "description_ref": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "is_spj": {
          "type": "boolean"
        },
        "memory_limit": {
          "type": "integer",
          "format": "int64"
        },
        "time_limit": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "GetProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/GetProblemData"
        }
      }
    },
    "GetSubmissionContentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "GetSubmissionInnerReply": {
      "type": "object",
      "properties": {
        "code_length": {
          "type": "integer",
          "format": "int"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "language": {
          "type": "integer",
          "format": "uint8"
        },
        "problem_id": {
          "type": "integer",
          "format": "uint"
        },
        "run_memory": {
          "type": "integer",
          "format": "int64"
        },
        "run_time": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "shared": {
          "type": "integer",
          "format": "uint8"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "GetSubmissionReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/GetSubmissionInnerReply"
        }
      }
    },
    "GetUserInnerReply": {
      "type": "object",
      "properties": {
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        },
        "motto": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        }
      }
    },
    "GetUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/GetUserInnerReply"
        }
      }
    },
    "HasGroupingPolicyReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "boolean"
        }
      }
    },
    "HasPolicyReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "boolean"
        }
      }
    },
    "InspectUserInnerReply": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "identities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        },
        "motto": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "success_problems": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint"
          }
        },
        "tried_problems": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint"
          }
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "InspectUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/InspectUserInnerReply"
        }
      }
    },
    "ListAnnouncementReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/announcement.Announcement"
          }
        }
      }
    },
    "ListCommentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment.Comment"
          }
        }
      }
    },
    "ListContestProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContestProblemDescData"
          }
        }
      }
    },
    "ListContestProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {}
        }
      }
    },
    "ListContestReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/contest.Contest"
          }
        }
      }
    },
    "ListContestUsersReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user.User"
          }
        }
      }
    },
    "ListGroupReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/group.Group"
          }
        }
      }
    },
    "ListProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProblemDescData"
          }
        }
      }
    },
    "ListProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/problem.Problem"
          }
        }
      }
    },
    "ListSubmissionInnerReply": {
      "type": "object",
      "properties": {
        "code_length": {
          "type": "integer",
          "format": "int"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "language": {
          "type": "integer",
          "format": "uint8"
        },
        "problem_id": {
          "type": "integer",
          "format": "uint"
        },
        "run_memory": {
          "type": "integer",
          "format": "int64"
        },
        "run_time": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "shared": {
          "type": "integer",
          "format": "uint8"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "ListSubmissionReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListSubmissionInnerReply"
          }
        }
      }
    },
    "ListUserInnerReply": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        },
        "motto": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "solved_problems_count": {
          "type": "integer",
          "format": "int64"
        },
        "tried_problems_count": {
          "type": "integer",
          "format": "int64"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "ListUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListUserInnerReply"
          }
        }
      }
    },
    "LoginUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/UserLoginData"
        }
      }
    },
    "LoginUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "password": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "PostAnnouncementReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "PostAnnouncementRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PostCommentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "comment": {}
      }
    },
    "PostCommentRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PostContestProblemData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "PostContestProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PostContestProblemDescRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PostContestProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/PostContestProblemData"
        }
      }
    },
    "PostContestProblemRequest": {
      "type": "object",
      "properties": {
        "config": {},
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PostContestReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "PostContestRequest": {
      "type": "object",
      "properties": {
        "board_frozen_duration": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "end_duration": {
          "type": "integer",
          "format": "int64"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PostGroupMemberReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PostGroupMemberRequest": {
      "type": "object"
    },
    "PostGroupReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "PostGroupRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "format": "uint"
        },
        "owner_name": {
          "type": "string"
        }
      }
    },
    "PostProblemData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "PostProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PostProblemDescRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PostProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/PostProblemData"
        }
      }
    },
    "PostProblemRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/problemconfig.ProblemConfig"
        },
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PostSubmissionData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "PostSubmissionReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/PostSubmissionData"
        }
      }
    },
    "PostSubmissionRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "information": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "pid": {
          "type": "integer",
          "format": "uint"
        },
        "shared": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "ProblemDescData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProblemFSLSInnerReply": {
      "type": "object",
      "properties": {
        "is_dir": {
          "type": "boolean"
        },
        "mod_time": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProblemFSLSReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProblemFSLSInnerReply"
          }
        }
      }
    },
    "ProblemFSMkdirReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSMkdirRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ProblemFSPutConfigReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "ProblemFSPutConfigRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          }
        }
      }
    },
    "ProblemFSReadConfigReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {}
      }
    },
    "ProblemFSReadReply": {
      "type": "object"
    },
    "ProblemFSRemoveAllReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSRemoveAllRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ProblemFSRemoveInnerReply": {
      "type": "object"
    },
    "ProblemFSRemoveReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/ProblemFSRemoveInnerReply"
        }
      }
    },
    "ProblemFSRemoveRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ProblemFSStatInnerReply": {
      "type": "object",
      "properties": {
        "is_dir": {
          "type": "boolean"
        },
        "mod_time": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProblemFSStatReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/ProblemFSStatInnerReply"
        }
      }
    },
    "ProblemFSWriteConfigReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSWriteConfigRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ProblemFSWriteReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSWriteRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ProblemFSWritesReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSWritesRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ProblemFSZipReadReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSZipWriteReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "ProblemFSZipWriteRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "PutAnnouncementReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutAnnouncementRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PutCommentReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutCommentRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PutContestProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutContestProblemDescRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PutContestProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutContestProblemRequest": {
      "type": "object",
      "properties": {
        "description_ref": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PutContestReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutContestRequest": {
      "type": "object",
      "properties": {
        "board_frozen_duration": {
          "type": "integer",
          "format": "int64"
        },
        "config_path": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end_duration": {
          "type": "integer",
          "format": "int64"
        },
        "role_path": {
          "type": "string"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PutGroupOwnerReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutGroupOwnerRequest": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "PutGroupReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutGroupRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PutProblemDescReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutProblemDescRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PutProblemReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutProblemRequest": {
      "type": "object",
      "properties": {
        "description_ref": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PutUserReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "PutUserRequest": {
      "type": "object",
      "properties": {
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "motto": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        }
      }
    },
    "RefreshTokenReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/UserRefreshTokenData"
        }
      }
    },
    "RegisterReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "$ref": "#/definitions/UserRegisterData"
        }
      }
    },
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "nick_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "RemoveGroupingPolicyReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "boolean"
        }
      }
    },
    "RemoveGroupingPolicyRequest": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "RemovePolicyReply": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "data": {
          "type": "boolean"
        }
      }
    },
    "RemovePolicyRequest": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "UserLoginData": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "identities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nick_name": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "UserRefreshTokenData": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "UserRegisterData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint"
        }
      }
    },
    "announcement.Announcement": {
      "type": "object",
      "properties": {
        "": {
          "type": "boolean"
        },
        "author_id": {
          "type": "integer",
          "format": "uint"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_update_id": {
          "type": "integer",
          "format": "uint"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "comment.Comment": {
      "type": "object",
      "properties": {
        "": {
          "type": "string"
        },
        "author_id;not null": {
          "type": "integer",
          "format": "uint"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_update_id": {
          "type": "integer",
          "format": "uint"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "comment.Filter": {
      "type": "object",
      "properties": {
        "no_reply": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int"
        },
        "page_size": {
          "type": "integer",
          "format": "int"
        },
        "ref": {
          "type": "integer",
          "format": "uint"
        },
        "ref_type": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "contest.Contest": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "uint"
        },
        "board_frozen_duration": {
          "type": "integer",
          "format": "int64"
        },
        "config_path": {
          "type": "string"
        },
        "contest_type": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "end_duration": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_update_id": {
          "type": "integer",
          "format": "uint"
        },
        "role_path": {
          "type": "string"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "genericResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "error": {
          "type": "object"
        },
        "params": {
          "type": "object",
          "items": {}
        }
      }
    },
    "gorm_crud_dao.Filter": {
      "type": "object",
      "properties": {
        "before_id": {
          "type": "integer",
          "format": "uint"
        },
        "order": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int"
        },
        "page_size": {
          "type": "integer",
          "format": "int"
        }
      }
    },
    "group.Group": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "name": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "format": "uint"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "problem.Problem": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "uint"
        },
        "code_length_limit": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "is_spj": {
          "type": "boolean"
        },
        "memory_limit": {
          "type": "integer",
          "format": "int64"
        },
        "time_limit": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "tmpl_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "problemconfig.JudgeConfig": {
      "type": "object",
      "properties": {
        "judge-type": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/problemconfig.TaskConfig"
          }
        }
      }
    },
    "problemconfig.ProblemConfig": {
      "type": "object",
      "properties": {
        "judge": {
          "$ref": "#/definitions/problemconfig.JudgeConfig"
        },
        "special-judge": {
          "$ref": "#/definitions/problemconfig.SpecialJudgeConfig"
        }
      }
    },
    "problemconfig.SpecialJudgeConfig": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "integer",
          "format": "uint8"
        },
        "file-path": {
          "type": "string"
        },
        "language-type": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "problemconfig.TaskConfig": {
      "type": "object",
      "properties": {
        "case-count": {
          "type": "integer",
          "format": "int"
        },
        "input-path": {
          "type": "string"
        },
        "memory-limit": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "output-path": {
          "type": "string"
        },
        "score": {
          "type": "integer",
          "format": "int"
        },
        "time-limit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "user.User": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer",
          "format": "uint8"
        },
        "id": {
          "type": "integer",
          "format": "uint"
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        },
        "motto": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "solved_problems": {
          "type": "integer",
          "format": "int64"
        },
        "tried_problems": {
          "type": "integer",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "user_name": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "GroupController"
    },
    {
      "name": "UserController"
    },
    {
      "name": "AuthController"
    },
    {
      "name": "AnnouncementController"
    },
    {
      "name": "CommentController"
    },
    {
      "name": "SubmissionController"
    },
    {
      "name": "ProblemController"
    },
    {
      "name": "ContestController"
    }
  ]
}