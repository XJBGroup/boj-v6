version: V1
# base-url: http://localhost:1080 # 基础url
# test-type: local-mock # 测试类型
selector: # 选择器
  # 当一个case的header中包含Content-Type选项为application/json;...时，它可以被json-selector选中
  - name: json-selector
    case:
      header:
        Content-Type: /^application\/json/ # 正则
default: # 为case赋默认值
  # 如果method不是get方法，那么encoding为json
  - $(.[!=(method, GET)]).encoding: json
  # 
  # - $(.[json-selector()]).encoding: json
  # 分层赋初值
  # get方法的encoding为query-string
  - encoding: query-string
# 
package: # 包声明
  # import std from 'std-assert';
  - namespace: std
    path: std-assert
  # import json from 'json-assert';
  - namespace: json
    path: json-assert
tests:
  - name: ~suit
    # using namespace json;
    using:
      $: json
    cases:
      - name: ~default # ~name表示它是个抽象测试用例，不需要被实例化
      - name: ~success.default # success.default继承default (点符号继承方法)
        script:
          # json.Assert(code, 0), 因为using namespace json; 所以可以省略json.
          # 相当于assert decode(response.body, 'json').code == 0
          - [Assert, code, 0]
      - name: ~failed.default
        script:
          - [AssertNEQ, code, 0]